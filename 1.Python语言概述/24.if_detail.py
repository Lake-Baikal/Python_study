#!/usr/bin/env python
# -*- coding:utf-8 -*-
# @FileName  :24.if_detail.py
# @Time      :2024/03/24 21:32:18
# @Author    :Baikal
# @Motto     :我亦无他,唯手熟尔

"""
让程序有选择的执行,分支控制有三种,单分支,双分支,多分支

单分支是通过if语句来实现的
语法:
if 条件表达式:
   代码块(可以多条语句)
! 当条件表达式为True时,就会执行代码块;如果为False就不执行
!Python的缩进非常重要,是用于界定代码块的,相当于其他编程语言的大括号{}
"""
# if 4 > 1:
#     print("ok1")
#     print("ok2")
#  ok1和ok2缩进两格，属于if语句的代码块,是一个整体
# print("ok3")
# 为什么print("ok3")缩进和ok1,ok2不一样但是还是会输出,因为ok3的格式没有错误，按照从上到下依次执行，先执行if语句代码块再执行ok3,所以会输出ok3
# if 4 < 1:
#     print("ok1")
#     print("ok2")
# print("ok3")
# 现在为False，所以不执行if代码块，但是从上到下依次执行，先执行if语句代码块再执行ok3,所以会输出ok3
"""
!最短的缩进对较长的有包含关系,缩进前后没有包含关系
但是每个代码块应具有相同的缩进长度(Tab或者相同个数空格)
"""
# if 100 > 20:
#                   print("ok4")
#                   print("ok5")

if 100 > 20:  # 这里定格没有缩进，所以包含下面的代码块
    print("ok4")
    print("ok5")
    if 8 > 2:  # 这里缩进应该TAB键，所以包含下面缩进两个Tab键的代码块
        print("ok6")

if 100 > 20:
    print("ok4")
    print("ok5")
    if 8 < 2:
        print("ok6")
# 错误示例
# if 100 > 20:
# print("ok4") # indent expected 应为缩进

# 案例:编写一个程序,可以输入人的年龄,如果大于18岁则输入"你的年龄大于18岁,请对自己的行为负责"
"""
思路:
1.定义变量age,接收用户输入(注意默认是字符串类型，要转换为整数)
2.使用if语句判断即可
"""
age = int(input("请输入你的年龄"))
if age > 18:
    print("你的年龄大于18岁,请对自己的行为负责")
